{"version":3,"sources":["utils.js","Home.js","Movie.js","App.js","serviceWorker.js","index.js"],"names":["checkStatus","response","ok","Error","json","Movie","props","_props$movie","movie","Title","Year","imdbID","Type","Poster","react_default","a","createElement","className","react_router_dom","to","concat","src","MovieFinder","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchTerm","results","error","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","value","_this2","preventDefault","trim","fetch","then","data","Response","Search","console","log","catch","message","_this$state","onSubmit","type","placeholder","onChange","map","Home_Movie","key","React","Component","match","params","id","_this$state$movie","Plot","Director","imdbRating","NotFound","App","basename","react_router","path","exact","component","Home","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e99f6933.chunk.js","sourcesContent":["export const checkStatus = (response) => {\n  if (response.ok) {\n    // .ok returns true if response status is 200-299\n    return response;\n  }\n  throw new Error('Request was either a 404 or 500');\n}\n\nexport const json = (response) => response.json()\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { json, checkStatus } from './utils';\n\nconst Movie = (props) => {\n  const {\n    Title,\n    Year,\n    imdbID,\n    Type,\n    Poster,\n  } = props.movie;\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-4 col-md-2 col-lg-1 mb-3\">\n        <Link to={`/movie/${imdbID}/`}>\n          <img src={Poster} className=\"img-fluid\" />\n        </Link>\n      </div>\n      <div className=\"col-8 col-md-10 col-lg-11 mb-3\">\n        <Link to={`/movie/${imdbID}/`}>\n          <h4>{Title}</h4>\n          <p>{Type} | {Year}</p>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nclass MovieFinder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: '',\n      results: [],\n      error: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let { searchTerm } = this.state;\n    searchTerm = searchTerm.trim();\n    if (!searchTerm) {\n      return;\n    }\n\n    fetch(`https://www.omdbapi.com/?s=${searchTerm}&apikey=b7da8d63`)\n      .then(checkStatus)\n      .then(json)\n      .then((data) => {\n        if (data.Response === 'False') {\n          throw new Error(data.Error);\n        }\n\n        if (data.Response === 'True' && data.Search) {\n          console.log(data);\n          this.setState({ results: data.Search, error: '' });\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: error.message });\n        console.log(error);\n      })\n  }\n\n  render() {\n    const { searchTerm, results, error } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <form onSubmit={this.handleSubmit} className=\"form-inline my-4\">\n              <input\n                type=\"text\"\n                className=\"form-control mr-sm-2\"\n                placeholder=\"frozen\"\n                value={searchTerm}\n                onChange={this.handleChange}\n              />\n              <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n            {(() => {\n              if (error) {\n                return error;\n              }\n              return results.map((movie) => {\n                return <Movie key={movie.imdbID} movie={movie} />;\n              })\n            })()}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MovieFinder;\n","import React from 'react';\nimport { json, checkStatus } from './utils';\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: null,\n    }\n  }\n\n  componentDidMount () {\n    fetch(`https://www.omdbapi.com/?i=${this.props.match.params.id}&apikey=b7da8d63`)\n      .then(checkStatus)\n      .then(json)\n      .then((data) => {\n        if (data.Response === 'False') {\n          throw new Error(data.Error);\n        }\n\n        if (data.Response === 'True') {\n          console.log(data);\n          this.setState({ movie: data, error: '' });\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: error.message });\n        console.log(error);\n      })\n  }\n\n  render() {\n    if (!this.state.movie) {\n      return null;\n    }\n\n    const {\n      Title,\n      Year,\n      Plot,\n      Director,\n      imdbRating,\n      Poster,\n    } = this.state.movie;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row pt-5\">\n          <div className=\"col-6\">\n            <h1>{Title}</h1>\n            <ul className=\"list-unstyled\">\n              <li>\n                <p>Year: {Year}</p>\n              </li>\n              <li>\n                <p>Director: {Director}</p>\n              </li>\n              <li>\n                <p>Plot: {Plot}</p>\n              </li>\n              <li>\n                <p>imdbRating: {imdbRating} / 10</p>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-6\">\n            <img src={Poster} className=\"img-fluid\" />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Movie;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Home from './Home';\nimport Movie from './Movie';\n\nimport './App.css';\n\nconst NotFound = () => {\n  return <h2>404 Not Found</h2>;\n}\n\nconst App = () => {\n  return (\n    <Router basename=\"/first-react-app\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <Link className=\"navbar-brand\" to=\"/\">Movie Finder</Link>\n      </nav>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/movie/:id\" component={Movie} />\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
